🐳 Goal

You’ll get a tiny PowerShell-based Docker container that:

Runs PowerShell in the container.

Continuously writes log lines (simulating app logs).

Lets you view logs with docker logs -f <container>.

🧱 Step 1 — Create a folder
mkdir powershell-log-test
cd powershell-log-test

🐋 Step 2 — Create a Dockerfile

Create a file named Dockerfile with this content:

# Use the official PowerShell base image
FROM mcr.microsoft.com/powershell:latest

# Set working directory
WORKDIR /app

# Create a PowerShell script that writes logs forever
RUN echo 'Write-Host "PowerShell logging demo started at $(Get-Date)"; `n\
$count = 0; `n\
while ($true) { `n\
  $count++; `n\
  Write-Host "$(Get-Date -Format o) - Log Entry #$count"; `n\
  Start-Sleep -Seconds 3; `n\
}' > log.ps1

# Run the PowerShell script when container starts
ENTRYPOINT ["pwsh", "-File", "log.ps1"]

⚙️ Step 3 — Build the Docker image

In the same folder:

docker build -t ps-log:1.0 .

▶️ Step 4 — Run the container

Run it in interactive mode:

docker run ps-log:1.0


✅ Output:

PowerShell logging demo started at 10/05/2025 19:00:01
2025-10-05T19:00:04.1234567Z - Log Entry #1
2025-10-05T19:00:07.1234567Z - Log Entry #2
...


Or run detached and watch logs:

docker run -d --name pslogger ps-log:1.0
docker logs -f pslogger


You’ll see continuous logs every 3 seconds.

🧹 Step 5 — Stop and clean up
docker stop pslogger
docker rm pslogger
